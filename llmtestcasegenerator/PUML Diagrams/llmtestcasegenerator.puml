@startuml llmtestcasegenerator
title RAG LLM Test Case Generator Lambda (LangChain + OpenSearch)

actor "User/API Gateway" as User
entity "TestCaseGenerator Lambda" as Lambda
entity "Bedrock Embeddings" as BedrockEmbed
entity "OpenSearchVectorSearch (LangChain)" as VectorSearch
database "OpenSearch" as OS
database "DynamoDB" as Dynamo
entity "Claude LLM (Bedrock)" as Claude

User --> Lambda : Send document, filename, session_id
Lambda --> BedrockEmbed : Generate embedding for extracted text
Lambda --> VectorSearch : Query top-k similar KB chunks
VectorSearch --> OS : Vector similarity search
Lambda --> Dynamo : Get recent conversation history
Lambda --> Claude : Send prompt + KB context + history
Claude --> Lambda : Return test cases
Lambda --> Claude : Send test cases for validation
Claude --> Lambda : Return validation feedback
Lambda --> Dynamo : Save updated history
Lambda --> User : Return test cases + validation feedback

note right of Lambda
- Receives document/filename/session_id
- Extracts text from document
- Embeds text and retrieves KB context
- Loads/saves history
- Builds prompt for Claude
- Returns test cases and validation
end note

@enduml